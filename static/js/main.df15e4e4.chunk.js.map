{"version":3,"sources":["components/assets/images/default_avatar_highlighted.svg","config/app-config.js","redux/action-constants.js","redux/reducers/search-parties-reducer.js","components/SearchSelectParty/AddParty/index.jsx","components/SearchSelectParty/SearchParties/SearchedList/index.jsx","components/SearchSelectParty/SearchParties/index.jsx","redux/actions/search-parties-action.js","components/SearchSelectParty/ShowParty/index.jsx","components/SearchSelectParty/index.jsx","App.js","serviceWorker.js","index.js","redux/index.js","components/assets/images/default_avatar.svg"],"names":["module","exports","__webpack_require__","p","BUILD","GET_PARTIES_LIST","GET_CURRENT_BALANACE","CLEAR_CURRENT_BALANACE","INITIAL_STATE","searchedPartiesList","currentBalance","partiesList","state","arguments","length","undefined","action","type","Object","objectSpread","data","AddParty","_ref","onClickAddParty","react_default","a","createElement","className","src","DEFAULT_AVATAR_HIGHLIGHTED","alt","onClick","SearchedList","onSelectingResult","map","_ref2","id","name","address","aliasName","key","_","SearchParties","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInputSearch","e","value","target","getPartiesList","setState","partyName","DEFAULT_AVATAR","htmlFor","concat","onChange","SearchParties_SearchedList","Component","connect","searchValue","dispatch","primaryContactId","gstBusinessType","city","pincode","country","gstin","industry","pancard","filter","x","toLocaleLowerCase","indexOf","setPartiesList","ShowParty","onCancelParty","_ref$currentBalance","balance","partyData","find","SearchSelectParty","shouldShowSearch","clearAddedPartyWithList","shouldShowParty","getCurrentBalance","_this$state","_this$props","_this$props$currentBa","SearchSelectParty_SearchParties","SearchSelectParty_AddParty","SearchSelectParty_ShowParty","reduxState","_reduxState$partiesLi","isDebit","setCurrentBalance","App","components_SearchSelectParty","Boolean","window","location","hostname","match","ReactDOM","render","es","store","combineReducers","middleWare","applyMiddleware","ReduxThunk","createStore","devToolsExtension","compose","createReduxStore","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df15e4e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default_avatar_highlighted.455c545b.svg\";","//needs to added in .env\nexport const BUILD = 'dev';","/**\n * handling parties\n */\nexport const GET_PARTIES_LIST = 'GET_PARTIES_LIST';\nexport const GET_CURRENT_BALANACE = 'GET_CURRENT_BALANACE';\nexport const CLEAR_CURRENT_BALANACE = 'CLEAR_CURRENT_BALANACE';","import {\n    GET_PARTIES_LIST,\n    GET_CURRENT_BALANACE,\n    CLEAR_CURRENT_BALANACE\n} from \"../action-constants\";\n\nconst INITIAL_STATE = {\n    searchedPartiesList: [],\n    currentBalance: null\n};\n\nexport default function partiesList(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case GET_PARTIES_LIST:\n            return { ...state, searchedPartiesList: action.data };\n\n        case GET_CURRENT_BALANACE:\n            return { ...state, currentBalance: action.data };\n\n        case CLEAR_CURRENT_BALANACE:\n            return state = INITIAL_STATE;\n            \n        default:\n            return state;\n    }\n}\n\n","import React from 'react';\nimport DEFAULT_AVATAR_HIGHLIGHTED from '../../assets/images/default_avatar_highlighted.svg';\n\nconst AddParty = ({ onClickAddParty }) =>\n    <div className=\"add-party-wrapper\">\n        <img src={DEFAULT_AVATAR_HIGHLIGHTED} className=\"avatar-image\" alt=\"default highlighted avatar\" />\n        <span className=\"add-party-text\" onClick={onClickAddParty}>+ add Party</span>\n    </div>\n\nexport default AddParty;","import React from 'react';\n\nconst SearchedList = ({ partiesList, onSelectingResult }) =>\n    <div className=\"searched-list-wrapper\">\n        {\n            partiesList.map(({\n                id,\n                name,\n                address,\n                aliasName\n            }) =>\n                <div key={id} id={id} className=\"search-list-row\" onClick={_ => onSelectingResult(id)}>\n                    <div className=\"title\">\n                        <span className=\"name\">{name}</span>\n                        <span className=\"alias-name\">({aliasName})</span>\n                    </div>\n                    <p className=\"address\">{address}</p>\n                </div>\n            )\n        }\n    </div>\n\nexport default SearchedList;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getPartiesList } from '../../../redux/actions/search-parties-action';\nimport SearchedList from './SearchedList';\nimport DEFAULT_AVATAR from '../../assets/images/default_avatar.svg';\n\nclass SearchParties extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            partyName: ''\n        }\n    }\n\n    onInputSearch = (e) => {\n        const { value } = e.target;\n        this.props.getPartiesList(value);\n        this.setState({ partyName: value })\n    }\n\n    render() {\n        const {\n            partyName\n        } = this.state,\n            {\n                searchedPartiesList\n            } = this.props;\n        return (\n            <div className=\"seach-parties-wrapper\">\n                <img src={DEFAULT_AVATAR} className=\"avatar-image select-avatar\" alt=\"default avatar\" />\n                <div className=\"input-wrapper\">\n                    <label htmlFor=\"praty-name\" className={`${partyName ? 'party-name-label' : 'party-name-label-default'}`}>\n                        Enter Party Name\n                    </label>\n                    <input\n                        id=\"praty-name\"\n                        className=\"party-name-input\"\n                        name=\"party-name\"\n                        onChange={this.onInputSearch}\n                        value={partyName}\n                    />\n                    <SearchedList partiesList={searchedPartiesList} onSelectingResult={this.props.onSelectingResult} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {\n    getPartiesList,\n})(SearchParties);","import {\n    GET_PARTIES_LIST,\n    GET_CURRENT_BALANACE,\n    CLEAR_CURRENT_BALANACE\n} from '../action-constants';\n\nfunction setPartiesList(data) {\n    return {\n        type: GET_PARTIES_LIST,\n        data\n    }\n}\n\nfunction setCurrentBalance(data) {\n    return {\n        type: GET_CURRENT_BALANACE,\n        data\n    }\n}\n\nfunction clearCurrentBalance() {\n    return {\n        type: CLEAR_CURRENT_BALANACE,\n    }\n}\n\nexport function getPartiesList(searchValue) {\n    return dispatch => {\n        //mock data is set\n        let data = [];\n\n        //below is the dafined data and searched data, which woould be exoected from the backend as a search result\n        if (searchValue.length > 0) {\n            data = [\n                {\n                    aliasName: 'Alpha Business',\n                    primaryContactId: '5b630bc5b4dbfe0014f68aba',\n                    gstBusinessType: 'regular',\n                    address: 'Gautam Tower, Near \\'B\\' Cabin, off Gokhale Road, Thane',\n                    city: 'Thane',\n                    state: 'MH',\n                    pincode: 400601,\n                    country: 'India',\n                    gstin: '26CVBPT2222T1Z5',\n                    name: 'Alpha Business Test 1533217732',\n                    industry: 'IT',\n                    pancard: 'CVBPT2222T',\n                    id: '5b630bc5b4dbfe0014f68ab9'\n                },\n                {\n                    aliasName: 'Jewl',\n                    primaryContactId: '5b654cdf881c1d0014f4f31f',\n                    gstBusinessType: 'Regular GST Business',\n                    address: 'Shop 123',\n                    city: 'Mumbai',\n                    state: 'MH',\n                    pincode: 400012,\n                    country: 'India',\n                    gstin: 'AJ122458493',\n                    name: 'Jewel',\n                    industry: '',\n                    pancard: '',\n                    id: '5b654cdf881c1d0014f4f31e'\n                },\n                {\n                    aliasName: 'Aakash',\n                    primaryContactId: '5b879d5dd1f79c0014a7353d',\n                    gstBusinessType: 'Regular GST Business',\n                    address: '36,Swami Dayanand Marg, 36,Swami Dayanand Marg, SHRI GANGANAGAR [ RAJ ]-335001',\n                    state: 'RJ',\n                    pincode: 335001,\n                    country: 'India',\n                    name: 'Aakash Ganga Cosmetics',\n                    id: '5b879d09d1f79c0014a7276a'\n                },\n                {\n                    aliasName: 'AGRA-A TO Z',\n                    primaryContactId: '5b879d14d1f79c0014a72cb9',\n                    gstBusinessType: 'Regular GST Business',\n                    address: '16/18,Satya Narayan Market, 16/18,Satya Narayan Market, Luhar Gali, Agra',\n                    state: 'UP',\n                    pincode: 0,\n                    country: 'India',\n                    name: 'AGRA-A TO Z IMMITATION JEWELLERS',\n                    id: '5b879d09d1f79c0014a7276b'\n                },\n                {\n                    aliasName: 'Raj',\n                    primaryContactId: '5b879d10d1f79c0014a72a38',\n                    gstBusinessType: 'Regular GST Business',\n                    address: 'Lohar Gali, Lohar Gali, 31/103,Vivek Complex, AGRA',\n                    state: 'UP',\n                    pincode: 0,\n                    country: 'India',\n                    name: 'AGRA KUMAR & BROS',\n                    id: '5b879d09d1f79c0014a7276c'\n                }\n            ];\n            data = data.filter(x => {\n                return (\n                    x.name.toLocaleLowerCase().indexOf(searchValue.toLocaleLowerCase()) !== -1 ||\n                    x.address.toLocaleLowerCase().indexOf(searchValue.toLocaleLowerCase()) !== -1\n                )\n            })\n        }\n        dispatch(setPartiesList(data));\n    }\n}\n\nexport function getCurrentBalance(id) {\n    return dispatch => {\n        //mock data is set\n        let data = [\n            {\n                balance: 11000.50,\n                isDebit: true,\n                name: 'Alpha Business Test 1533217732',\n                id: '5b630bc5b4dbfe0014f68ab9'\n            },\n            {\n                balance: 15000,\n                isDebit: true,\n                name: 'Jewel',\n                id: '5b654cdf881c1d0014f4f31e'\n            },\n            {\n                balance: 20000,\n                isDebit: false,\n                name: 'Aakash Ganga Cosmetics',\n                id: '5b879d09d1f79c0014a7276a'\n            },\n            {\n                balance: 40000.00,\n                isDebit: true,\n                name: 'AGRA-A TO Z IMMITATION JEWELLERS',\n                id: '5b879d09d1f79c0014a7276b'\n            },\n            {\n                balance: 10000.50,\n                isDebit: false,\n                name: 'AGRA KUMAR & BROS',\n                id: '5b879d09d1f79c0014a7276c'\n            }\n        ];\n\n        if (id) data = data.find(x => x.id === id);\n\n        dispatch(setCurrentBalance(data));\n    }\n}\n\nexport function clearAddedPartyWithList() {\n    return dispatch => {\n        dispatch(clearCurrentBalance());\n    }\n}","import React from 'react';\nimport DEFAULT_AVATAR from '../../assets/images/default_avatar.svg';\n\nconst ShowParty = ({ onCancelParty, currentBalance: { id, balance }, searchedPartiesList }) => {\n    let partyData = searchedPartiesList.find(x => x.id === id);\n    return (\n        <div className=\"show-party-wrapper\" >\n            <img src={DEFAULT_AVATAR} className=\"avatar-image add-party-avatar\" alt=\"default highlighted avatar\" />\n            <div className=\"party-info\">\n                <h2 className=\"party-title\">\n                    {partyData.name || ''}\n                </h2>\n                <p className=\"party-data\">\n                    {partyData.address || ''}\n                </p>\n                <span className=\"current-balance\">\n                    {`Current Balance Rs. ${balance}`}\n                </span>\n            </div>\n            <div className=\"cancel-wrapper\" onClick={onCancelParty}>\n                <span></span>\n                <span></span>\n            </div>\n        </div>\n    )\n}\n\nexport default ShowParty;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { clearAddedPartyWithList, getCurrentBalance } from '../../redux/actions/search-parties-action';\nimport AddParty from './AddParty';\nimport SearchParties from './SearchParties';\nimport ShowParty from './ShowParty';\nimport './search-select.scss';\n\nclass SearchSelectParty extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            shouldShowSearch: false,\n            shouldShowParty: false,\n        };\n    }\n\n    onClickAddParty = () => {\n        this.setState({ shouldShowSearch: true });\n    }\n\n    onCancelParty = () => {\n        this.props.clearAddedPartyWithList();\n        this.setState({\n            shouldShowSearch: false,\n            shouldShowParty: false\n        });\n    }\n\n    onSelectingResult = (id) => {\n        this.props.getCurrentBalance(id);\n        this.setState({\n            shouldShowSearch: false,\n            shouldShowParty: true\n        });\n    }\n\n    render() {\n        const {\n            shouldShowSearch,\n            shouldShowParty\n        } = this.state,\n            {\n                searchedPartiesList,\n                currentBalance = null\n            } = this.props;\n        return (\n            <div className=\"search-select-wrapper\">\n                {\n                    !shouldShowSearch ?\n                        !shouldShowParty && <AddParty onClickAddParty={this.onClickAddParty} />\n                        :\n                        !shouldShowParty &&\n                        <SearchParties searchedPartiesList={searchedPartiesList} onSelectingResult={this.onSelectingResult} />\n                }\n                {\n                    currentBalance && shouldShowParty &&\n                    <ShowParty\n                        currentBalance={currentBalance}\n                        searchedPartiesList={searchedPartiesList}\n                        onCancelParty={this.onCancelParty}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(reduxState) {\n    const {\n        partiesList: {\n            searchedPartiesList,\n            currentBalance\n        }\n    } = reduxState;\n\n    return {\n        searchedPartiesList,\n        currentBalance\n    };\n}\n\nexport default connect(mapStateToProps, {\n    clearAddedPartyWithList,\n    getCurrentBalance\n})(SearchSelectParty);","import React, { Component } from 'react';\nimport SearchSelectParty from './components/SearchSelectParty';\nimport './components/assets/styles/main.scss';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchSelectParty />\n        <header className=\"App-header\">\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport createReduxStore from './redux';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={createReduxStore()}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport ReduxThunk from 'redux-thunk';\nimport { BUILD } from \"../config/app-config\";\nimport partiesList from './reducers/search-parties-reducer';\n\nexport default function createReduxStore() {\n    let reduxState = combineReducers({\n        partiesList\n    }),\n        middleWare = applyMiddleware(ReduxThunk);\n    return createStore(reduxState, BUILD === \"dev\" && window.devToolsExtension ?\n        compose(middleWare, window.devToolsExtension()) : middleWare);\n}","module.exports = __webpack_public_path__ + \"static/media/default_avatar.55e9c38e.svg\";"],"sourceRoot":""}